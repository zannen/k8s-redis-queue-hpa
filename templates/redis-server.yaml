---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
  namespace: {{ .Release.Namespace }}
  labels:
    name: redis-data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
  strategy: {}
  template:
    metadata:
      labels:
        app: redis-server
    spec:
      containers:
        - image: redis:5.0.12-alpine
          imagePullPolicy: IfNotPresent
          name: redis-server
          args: 
            - redis-server
            - --save
            - "60"
            - "100"
            - --appendonly
            - "yes"
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          volumeMounts:
            - mountPath: /data
              name: thedata
              subPath: redis
      volumes:
        - name: thedata
          persistentVolumeClaim:
            claimName: redis-data

---
apiVersion: v1
kind: Service
metadata:
  name: redis-server
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  ports:
    - port: 36379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis-server
